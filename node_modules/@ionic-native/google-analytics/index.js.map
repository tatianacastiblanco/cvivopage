{"version":3,"file":"index.js","sourceRoot":"","sources":["../../../src/@ionic-native/plugins/google-analytics/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n\n/**\n * @name Google Analytics\n * @description\n * This plugin connects to Google's native Universal Analytics SDK\n * Prerequisites:\n * - A Cordova 3.0+ project for iOS and/or Android\n * - A Mobile App property through the Google Analytics Admin Console\n * - (Android) Google Play Services SDK installed via [Android SDK Manager](https://developer.android.com/sdk/installing/adding-packages.html)\n * @usage\n * ```typescript\n * import { GoogleAnalytics } from '@ionic-native/google-analytics';\n *\n * constructor(private ga: GoogleAnalytics) { }\n *\n * ...\n *\n * this.ga.startTrackerWithId('YOUR_TRACKER_ID')\n *    .then(() => {\n *      console.log('Google analytics is ready now');\n *       this.ga.trackView('test');\n *      // Tracker is ready\n *      // You can now track pages or set additional information such as AppVersion or UserId\n *    })\n *    .catch(e => console.log('Error starting GoogleAnalytics', e));\n *\n *\n * ```\n */\n@Plugin({\n  pluginName: 'GoogleAnalytics',\n  plugin: 'cordova-plugin-google-analytics',\n  pluginRef: 'ga',\n  repo: 'https://github.com/danwilson/google-analytics-plugin',\n  platforms: ['Android', 'Browser', 'iOS', 'Windows Phone 8']\n})\n@Injectable()\nexport class GoogleAnalytics extends IonicNativePlugin {\n  /**\n   * In your 'deviceready' handler, set up your Analytics tracker.\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/\n   * @param {string}  id  Your Google Analytics Mobile App property\n   * @param {number} interval Optional dispatch period in seconds. Defaults to 30.\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  startTrackerWithId(id: string, interval?: number): Promise<any> {\n    return;\n  }\n\n  /**\n   * Enabling Advertising Features in Google Analytics allows you to take advantage of Remarketing, Demographics & Interests reports, and more\n   * @param allow {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAllowIDFACollection(allow: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Set a UserId\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/user-id\n   * @param {string} id User ID\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setUserId(id: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Set a anonymize Ip address\n   * @param anonymize {boolean} Set to true to anonymize the IP Address\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAnonymizeIp(anonymize: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Set the app version\n   * @param appVersion {string} App version\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setAppVersion(appVersion: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Get a variable\n   * @param key {string} Variable\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  getVar(key: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Set a variable\n   * @param key {string} Variable\n   * @param value {string} Parameter\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setVar(key: string, value: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Set OptOut\n   * @param optout {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  setOptOut(optout: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Enable verbose logging\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  debugMode(): Promise<any> {\n    return;\n  }\n\n  /**\n   * Track custom metric\n   * @param key {number}\n   * @param value {any}\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 2,\n    errorIndex: 3\n  })\n  trackMetric(key: number, value?: number): Promise<any> {\n    return;\n  }\n\n  /**\n   * Track a screen\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/screens\n   *\n   * @param title {string} Screen title\n   * @param campaignUrl {string} Campaign url for measuring referrals\n   * @param newSession {boolean} Set to true to create a new session\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 3,\n    errorIndex: 4\n  })\n  trackView(\n    title: string,\n    campaignUrl?: string,\n    newSession?: boolean\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Add a Custom Dimension\n   * https://developers.google.com/analytics/devguides/platform/customdimsmets\n   * @param key {number}\n   * @param value {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addCustomDimension(key: number, value: string): Promise<any> {\n    return;\n  }\n\n  /**\n   * Track an event\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/events\n   * @param category {string}\n   * @param action {string}\n   * @param label {string}\n   * @param value {number}\n   * @param newSession {boolean} Set to true to create a new session\n   * @returns {Promise<any>}\n   */\n  @Cordova({\n    successIndex: 5,\n    errorIndex: 6\n  })\n  trackEvent(\n    category: string,\n    action: string,\n    label?: string,\n    value?: number,\n    newSession?: boolean\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Track an exception\n   * @param description {string}\n   * @param fatal {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  trackException(description: string, fatal: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Track User Timing (App Speed)\n   * @param category {string}\n   * @param intervalInMilliseconds {number}\n   * @param variable {string}\n   * @param label {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  trackTiming(\n    category: string,\n    intervalInMilliseconds: number,\n    variable: string,\n    label: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Add a Transaction (Ecommerce)\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addTrans\n   * @param id {string}\n   * @param affiliation {string}\n   * @param revenue {number}\n   * @param tax {number}\n   * @param shipping {number}\n   * @param currencyCode {string}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addTransaction(\n    id: string,\n    affiliation: string,\n    revenue: number,\n    tax: number,\n    shipping: number,\n    currencyCode: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Add a Transaction Item (Ecommerce)\n   * https://developers.google.com/analytics/devguides/collection/analyticsjs/ecommerce#addItem\n   * @param {string}  id\n   * @param {string}  name\n   * @param {string}  sku\n   * @param {string}  category\n   * @param {number}  price\n   * @param {number}  quantity\n   * @param {string}  currencyCode\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  addTransactionItem(\n    id: string,\n    name: string,\n    sku: string,\n    category: string,\n    price: number,\n    quantity: number,\n    currencyCode: string\n  ): Promise<any> {\n    return;\n  }\n\n  /**\n   * Enable/disable automatic reporting of uncaught exceptions\n   * @param shouldEnable {boolean}\n   * @returns {Promise<any>}\n   */\n  @Cordova()\n  enableUncaughtExceptionReporting(shouldEnable: boolean): Promise<any> {\n    return;\n  }\n\n  /**\n   * Manually dispatch any data\n   * @returns {Promise<any>}\n   * @platform\n   */\n  @Cordova({\n    platforms: ['Android', 'iOS', 'Windows']\n  })\n  dispatch(): Promise<any> {\n    return;\n  }\n}\n"]}